from rapidfuzz import process

class Book:
    def __init__(self, title, author, isbn, available_copies):
        self.title = title
        self.author = author
        self.isbn = isbn
        self.available_copies = available_copies
      
    def borrow(self):
        if self.available_copies > 0:
            self.available_copies -= 1
            return f"You have successfully borrowed {self.title}. Have fun!"
        else:
            return f"Book {self.title} is not available. We're sorry and recommend to try another title."
          
    def return_book(self):
        self.available_copies += 1
        return f"Thank you for returning {self.title}!"
        
    def get_book_info(self):
        return f"Title: {self.title}, Author: {self.author}, ISBN: {self.isbn}, Available copies: {self.available_copies}"
        
class Library:
    def __init__(self):
        self.books = []
      
    def add_book(self, book):
        self.books.append(book)

    def list_available_books(self):
        for book in self.books:
            if book.available_copies > 0:
                print(book.get_book_info())

    def search_books_by_title(self, title):
        book_titles = [book.title for book in self.books]
        best_fit = process.extractOne(title, book_titles)

        if best_fit and best_fit[1] > 70:
            matching_title = best_fit[0]
            for book in self.books:
                if book.title == matching_title:
                    return book
        return None
          
    def search_books_by_author(self, author):
        book_author = [book.author for book in self.books]
        best_fit = process.extractOne(author, book_author)

        if best_fit and best_fit[1] > 70:
            matching_author = best_fit[0]
            for book in self.books:
                if book.author == matching_author:
                    return book
        return None

# Creating books
book1 = Book("Harry Potter", "J.K. Rowling", "1234567890", 3)
book2 = Book("Lord Of The Rings", "Tolkien", "3145526731", 2)

# Creating library
library = Library()

# Adding books to the library
library.add_book(book1)
library.add_book(book2)

# List of available books
library.list_available_books()

# Searching book by title
search_books_by_title = library.search_books_by_title("Harry Potter")
if search_books_by_title:
    print(search_books_by_title.get_book_info())
    print(search_books_by_title.borrow())  # Borrowing book
else:
    print("Book not found")

# Searching book by author
search_books_by_author = library.search_books_by_author("Tolkien")
if search_books_by_author:
    print(search_books_by_author.get_book_info())
    print(search_books_by_author.borrow()) # Borrowing book
else:
    print("Book not found")
